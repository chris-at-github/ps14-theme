@use "sass:math";

/*
 * a small mixin for easy use of rem with px as fallback
 * usage: @include rem(font-size, 14px)
 * usage: @include rem(margin, 0 12px 2 1.2)
 * usage: @include rem(padding, 1.5 24px)
 *
 * thanks to Eric Meyer for https://github.com/ericam/susy
 * and Hans Christian Reinl for http://drublic.de/blog/rem-fallback-sass-less/
 */
@function rem($values) {
	// Create a couple of empty lists as output buffers.
	$base-font-size: $font-size-default; // should be consistent with your html/body font-size
	$rem-values: ();

	// Loop through the $values list
	@each $value in $values {
		// For each property value, if it's in rem or px, derive both rem and
		// px values for it and add those to the end of the appropriate buffer.
		// Ensure all pixel values are rounded to the nearest pixel.
		@if $value == 0 or $value == 0px {
			// 0 -- use it without a unit
			$rem-values: join($rem-values, 0);
		} @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {
			// px value given - calculate rem value from base-font-size
			$new-rem-value: math.div($value, $font-size-default);
			$rem-values: join($rem-values, #{$new-rem-value}rem);
		} @else {
			$rem-values: join($rem-values, #{$value}rem);
		}
	}

	@return $rem-values;
}